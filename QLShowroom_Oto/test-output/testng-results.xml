<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="7" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-15T16:01:54 ICT" name="Default suite" finished-at="2022-04-15T16:01:55 ICT" duration-ms="898">
    <groups>
    </groups>
    <test started-at="2022-04-15T16:01:54 ICT" name="Default test" finished-at="2022-04-15T16:01:55 ICT" duration-ms="898">
      <class name="com.source.dao.test.NhanVienDAOTest">
        <test-method is-config="true" signature="insertTest()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:54 ICT" name="insertTest" finished-at="2022-04-15T16:01:54 ICT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:54 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:54 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteTest()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:54 ICT" name="deleteTest" finished-at="2022-04-15T16:01:55 ICT" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="deleteTest2()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="deleteTest2" finished-at="2022-04-15T16:01:55 ICT" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTest2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="f(java.lang.Integer,java.lang.String)[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="f" data-provider="dp" finished-at="2022-04-15T16:01:55 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="f(java.lang.Integer,java.lang.String)[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="f" data-provider="dp" finished-at="2022-04-15T16:01:55 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="insertTest2()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="insertTest2" finished-at="2022-04-15T16:01:55 ICT" duration-ms="2" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.source.model.NhanVien.getMaNV()" because "entity" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.source.model.NhanVien.getMaNV()" because "entity" is null
at com.source.dao.NhanVienDAO.insert(NhanVienDAO.java:34)
at com.source.dao.test.NhanVienDAOTest.insertTest2(NhanVienDAOTest.java:132)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertTest2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectAllTest()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="selectAllTest" finished-at="2022-04-15T16:01:55 ICT" duration-ms="72" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Collections not equal: expected: null and actual: [Hoàng Văn Tú, Dương Thanh Phương, Nguyễn Thế Thọ, Trần Văn Phú, Hoàng Văn A, Nguyễn Thị Hoàng, Dương Quốc Huy, Hồ Hoàng Phú, Nguyễn Thị Kim Ngân, Trần Thị Kim Dung, Trần Đức Quang]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Collections not equal: expected: null and actual: [Hoàng Văn Tú, Dương Thanh Phương, Nguyễn Thế Thọ, Trần Văn Phú, Hoàng Văn A, Nguyễn Thị Hoàng, Dương Quốc Huy, Hồ Hoàng Phú, Nguyễn Thị Kim Ngân, Trần Thị Kim Dung, Trần Đức Quang]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.assertEquals(Assert.java:1085)
at org.testng.Assert.assertEquals(Assert.java:1065)
at com.source.dao.test.NhanVienDAOTest.selectAllTest(NhanVienDAOTest.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAllTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="selectAllTest2()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="selectAllTest2" finished-at="2022-04-15T16:01:55 ICT" duration-ms="31" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Collections not equal: expected: null and actual: [Hoàng Văn Tú, Dương Thanh Phương, Nguyễn Thế Thọ, Trần Văn Phú, Hoàng Văn A, Nguyễn Thị Hoàng, Dương Quốc Huy, Hồ Hoàng Phú, Nguyễn Thị Kim Ngân, Trần Thị Kim Dung, Trần Đức Quang]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Collections not equal: expected: null and actual: [Hoàng Văn Tú, Dương Thanh Phương, Nguyễn Thế Thọ, Trần Văn Phú, Hoàng Văn A, Nguyễn Thị Hoàng, Dương Quốc Huy, Hồ Hoàng Phú, Nguyễn Thị Kim Ngân, Trần Thị Kim Dung, Trần Đức Quang]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.assertEquals(Assert.java:1085)
at org.testng.Assert.assertEquals(Assert.java:1065)
at com.source.dao.test.NhanVienDAOTest.selectAllTest2(NhanVienDAOTest.java:143)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAllTest2 -->
        <test-method signature="selectByIdTest()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="selectByIdTest" finished-at="2022-04-15T16:01:55 ICT" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectByIdTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectByIdTest2()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="selectByIdTest2" finished-at="2022-04-15T16:01:55 ICT" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectByIdTest2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateTest()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="updateTest" finished-at="2022-04-15T16:01:55 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="beforeMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateTest2()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="updateTest2" finished-at="2022-04-15T16:01:55 ICT" duration-ms="2" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.source.model.NhanVien.getMaNV()" because "entity" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.source.model.NhanVien.getMaNV()" because "entity" is null
at com.source.dao.NhanVienDAO.insert(NhanVienDAO.java:34)
at com.source.dao.test.NhanVienDAOTest.updateTest2(NhanVienDAOTest.java:160)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTest2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.source.dao.test.NhanVienDAOTest@4c60d6e9]" started-at="2022-04-15T16:01:55 ICT" name="afterMethod" finished-at="2022-04-15T16:01:55 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.source.dao.test.NhanVienDAOTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
